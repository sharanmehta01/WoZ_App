// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates a customer profile based on questionnaire responses.
 *
 * - generateCustomerProfile - A function that handles the customer profile generation process.
 * - CustomerProfileInput - The input type for the generateCustomerProfile function.
 * - CustomerProfileOutput - The return type for the generateCustomerProfile function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const CustomerProfileInputSchema = z.object({
  budget: z.string().describe('The client\u0027s budget.'),
  tastes: z.string().describe('The client\u0027s tastes and preferences.'),
  goals: z.string().describe('The client\u0027s goals for the design.'),
  needs: z.string().describe('The client\u0027s needs for the design.'),
});
export type CustomerProfileInput = z.infer<typeof CustomerProfileInputSchema>;

const CustomerProfileOutputSchema = z.object({
  profileSummary: z.string().describe('A summary of the customer profile, including budget, tastes, goals, and needs.'),
});
export type CustomerProfileOutput = z.infer<typeof CustomerProfileOutputSchema>;

export async function generateCustomerProfile(input: CustomerProfileInput): Promise<CustomerProfileOutput> {
  return customerProfileFlow(input);
}

const prompt = ai.definePrompt({
  name: 'customerProfilePrompt',
  input: {
    schema: z.object({
      budget: z.string().describe('The client\u0027s budget.'),
      tastes: z.string().describe('The client\u0027s tastes and preferences.'),
      goals: z.string().describe('The client\u0027s goals for the design.'),
      needs: z.string().describe('The client\u0027s needs for the design.'),
    }),
  },
  output: {
    schema: z.object({
      profileSummary: z.string().describe('A summary of the customer profile, including budget, tastes, goals, and needs.'),
    }),
  },
  prompt: `You are an expert interior designer specializing in understanding client needs and preferences.

  Based on the following information, generate a concise customer profile summary that includes their budget, tastes, goals, and needs.

  Budget: {{{budget}}}
  Tastes: {{{tastes}}}
  Goals: {{{goals}}}
  Needs: {{{needs}}}
  `,
});

const customerProfileFlow = ai.defineFlow<
  typeof CustomerProfileInputSchema,
  typeof CustomerProfileOutputSchema
>({
  name: 'customerProfileFlow',
  inputSchema: CustomerProfileInputSchema,
  outputSchema: CustomerProfileOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
